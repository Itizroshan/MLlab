4)Decision Tree

import pandas as pd # load and manipulate data and for One-Hot Encoding
import numpy as np # calculate the mean and standard deviation
import matplotlib.pyplot as plt # drawing graphs
from sklearn.tree import DecisionTreeClassifier # a classification tree
from sklearn.tree import plot_tree # draw a classification tree
from sklearn.model_selection import train_test_split # split data into training and testing sets
from sklearn.model_selection import cross_val_score # cross validation
from sklearn.metrics import confusion_matrix # creates a confusion matrix
from sklearn.metrics import plot_confusion_matrix

df=pd.read_csv("zoo_data.csv",header=None)

y=df[16].copy()
y.head()

X=df.drop(16, axis=1).copy()
X.head()

df[12].unique()


y.unique()

for i in range(len(y)):
    if y[i] <= 4:
        y[i]=0
    else:
        y[i]=1

y.unique()    


X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)
clf_dt = DecisionTreeClassifier(random_state=42)
clf_dt = clf_dt.fit(X_train, y_train)
y_pred=clf_dt.predict(X_test)
plot_confusion_matrix(clf_dt, X_test, y_test,cmap=plt.cm.Blues, display_labels=["0", "1"])
plt.figure(figsize=(15,7.5))
plot_tree(clf_dt, 
          filled=True, 
          rounded=True, 
          class_names=["No", "Yes"], 
          feature_names=X.columns)

from sklearn import metrics

print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

5)Linear Regression

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
data=pd.read_csv('Food-Truck-LineReg.csv')
X = data.iloc[:,0].values.reshape(-1,1)
Y = data.iloc[:,1].values.reshape(-1,1)
linear_regression=LinearRegression()
linear_regression.fit(X,Y)
Y_pred=linear_regression.predict(X)
plt.scatter(X,Y)
plt.plot(X,Y_pred,color='green')
plt.show()